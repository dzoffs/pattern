# Базовий клас обробника
class Handler:
    def __init__(self, successor=None):
        self.successor = successor

    def handle_request(self, request):
        if self.successor is not None:
            self.successor.handle_request(request)

# Конкретний обробник A
class ConcreteHandlerA(Handler):
    def handle_request(self, request):
        if request == "A":
            print("ConcreteHandlerA обробив запит")
        else:
            super().handle_request(request)

# Конкретний обробник B
class ConcreteHandlerB(Handler):
    def handle_request(self, request):
        if request == "B":
            print("ConcreteHandlerB обробив запит")
        else:
            super().handle_request(request)

# Конкретний обробник C
class ConcreteHandlerC(Handler):
    def handle_request(self, request):
        if request == "C":
            print("ConcreteHandlerC обробив запит")
        else:
            super().handle_request(request)


if __name__ == '__main__':
    handlerA = ConcreteHandlerA()
    handlerB = ConcreteHandlerB()
    handlerC = ConcreteHandlerC()

    handlerA.successor = handlerB
    handlerB.successor = handlerC

    requests = ["A", "B", "C", "D"]
    for request in requests:
        handlerA.handle_request(request)
